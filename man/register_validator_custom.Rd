% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validators_and_renderers.R
\name{register_validator_custom}
\alias{register_validator_custom}
\title{Register a custom validator with Handsontable}
\usage{
register_validator_custom(hot, name, jsFunction)
}
\arguments{
\item{hot}{The Handsontable object to register the validator with.}

\item{name}{Specify a unique name for the validator, use this name to apply the validator in the rhot::hot_column validator argument.}

\item{jsFunction}{The custom validator JS function as a string.}
}
\value{
The Handsontable object, hot, with the specified changes applied.
}
\description{
This function turns a string of Javascript into a packaged validator that can then be used in your Handsontable. See details for exact usage information.
}
\details{
You can provide a custom validator by passing the JavaScript code as a string. The string will be glued to a template wrapper function for you, then marked as JavaScript and passed to the Handsontable constructor for registration with the library. Here's an example of a custom validator:

"function customValidator(query, callback) { \cr
  // this example validator always approves the cell's input \cr
  // the query object is the input from the table cell \cr
  // put your custom javascript and logic in here \cr
  // use the callback to tell the cell whether or not the value is acceptable \cr
  callback( false ); \cr
  // and that's it, everything else is handled by rhot and Handsontable \cr
}" \cr
}
